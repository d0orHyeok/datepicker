"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[994],{5400:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>o});var r=d(3274),i=d(3006);d(7424),d(7575);const t={sidebar_position:5},s="Converter",c={id:"documentations/api/converter",title:"Converter",description:"Converter instance for convert date to datepicker's locale format",source:"@site/docs/documentations/api/converter.mdx",sourceDirName:"documentations/api",slug:"/documentations/api/converter",permalink:"/snow-datepicker/docs/documentations/api/converter",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"documentations",previous:{title:"Methods",permalink:"/snow-datepicker/docs/documentations/api/methods"},next:{title:"License",permalink:"/snow-datepicker/docs/documentations/license"}},l={},o=[{value:"Methods",id:"methods",level:2},{value:"format",id:"format",level:3},{value:"time",id:"time",level:3},{value:"date",id:"date",level:3},{value:"localeMonth",id:"localemonth",level:3},{value:"localeWeekday",id:"localeweekday",level:3}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"converter",children:"Converter"}),"\n",(0,r.jsx)(n.p,{children:"Converter instance for convert date to datepicker's locale format"}),"\n",(0,r.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(n.h3,{id:"format",children:"format"}),"\n",(0,r.jsx)(n.p,{children:"Convert date to given format string."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"(value: any, format: string) => string;\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," - The date to format. If date value is not valid, function will return given ",(0,r.jsx)(n.code,{children:"format"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"format"})," - The format string to convert. (e.g. ",(0,r.jsx)(n.code,{children:"YYYY-MM-DD"}),"). ",(0,r.jsx)(n.a,{href:"/snow-datepicker/docs/documentations/options/setup-options#dateFormat",children:"dateFormat"})," options can be used."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Get the formatted date according to the string."}),"\n",(0,r.jsxs)(n.p,{children:["If you want to pass escape characters, you can use ",(0,r.jsx)(n.code,{children:"square brackets"})," to wrap the text.\r\n(e.g. ",(0,r.jsx)(n.code,{children:"YYYY [escaped text] MM"})," will output ",(0,r.jsx)(n.code,{children:"2024 escaped text 01"}),")"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"YY"})," ",(0,r.jsx)(n.em,{children:"2-digit year"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"YY1"})," ",(0,r.jsx)(n.em,{children:"2-digit year of the first year in current decade"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"YY2"})," ",(0,r.jsx)(n.em,{children:"2-digit year of the last year in current decade"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"YYYY"})," ",(0,r.jsx)(n.em,{children:"full year"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"YYYY1"})," ",(0,r.jsx)(n.em,{children:"full year of the first year in current decade"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"YYYY2"})," ",(0,r.jsx)(n.em,{children:"full year of the last year in current decade"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"M"})," ",(0,r.jsx)(n.em,{children:"month"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MM"})," ",(0,r.jsx)(n.em,{children:"month with leading zero"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MMM"})," ",(0,r.jsx)(n.em,{children:"short month name"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MMMM"})," ",(0,r.jsx)(n.em,{children:"full month name"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"D"})," ",(0,r.jsx)(n.em,{children:"day"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DD"})," ",(0,r.jsx)(n.em,{children:"day with leading zero"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"d"})," ",(0,r.jsx)(n.em,{children:"weekday index"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dd"})," ",(0,r.jsx)(n.em,{children:"min weekday name"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ddd"})," ",(0,r.jsx)(n.em,{children:"short weekday name"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dddd"})," ",(0,r.jsx)(n.em,{children:"full weekday name"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"time",children:"time"}),"\n",(0,r.jsx)(n.p,{children:"Convert date to time format string."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"(value: any) => string;\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," - The date to format."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"date",children:"date"}),"\n",(0,r.jsx)(n.p,{children:"Convert date to date format string."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"(value: any) => string;\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"value"})," - The date to format."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"localemonth",children:"localeMonth"}),"\n",(0,r.jsx)(n.p,{children:"Convert month index to locale month name."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"(monthindex: number, short?: boolean) => string;\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"monthindex"})," - The month index to convert."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"short"})," - If ",(0,r.jsx)(n.code,{children:"true"}),", short month name will be returned."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"localeweekday",children:"localeWeekday"}),"\n",(0,r.jsx)(n.p,{children:"Convert weekday index to locale weekday name."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"(weekdayindex: number, options?: 'short' | 'min') => string;\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"weekdayindex"})," - The weekday index to convert."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"options"})," - If ",(0,r.jsx)(n.code,{children:"short"}),", short weekday name will be returned. If ",(0,r.jsx)(n.code,{children:"min"}),", min weekday name will be returned."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},7424:(e,n,d)=>{d.d(n,{A:()=>i});var r=d(3274);function i(e){let{type:n,defaults:d}=e;return(0,r.jsx)("table",{class:"docs-table",children:(0,r.jsx)("tbody",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:"Type"}),(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:n})}),d?(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("th",{style:{color:"rgb(200, 130, 130)"},children:"Default"}),(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:d})})]}):null]})})})}},3006:(e,n,d)=>{d.d(n,{R:()=>s,x:()=>c});var r=d(9474);const i={},t=r.createContext(i);function s(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);